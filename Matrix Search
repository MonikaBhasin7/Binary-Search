/*https://www.interviewbit.com/problems/matrix-search/
Given a matrix of integers A of size N x M and an integer B.

Write an efficient algorithm that searches for integar B in matrix A.

This matrix A has the following properties:

Integers in each row are sorted from left to right.
The first integer of each row is greater than or equal to the last integer of the previous row.
Return 1 if B is present in A, else return 0.

Note: Rows are numbered from top to bottom and columns are numbered from left to right.

*/

int Solution::searchMatrix(vector<vector<int> > &A, int B) {
    int i,j;
    
    int m=A.size();
    int n=A[0].size();
    
    i=0;
    j=n-1;
    
    while(i>=0 && i<m && j>=0 && j<n)
    {
        if(A[i][j]==B)
        {
            return 1;
        }
        else if(A[i][j]>B)
        {
            //move left
            j=j-1;
        }
        else if(A[i][j]<B)
        {
            i=i+1;
        }
    }
    return 0;
}
